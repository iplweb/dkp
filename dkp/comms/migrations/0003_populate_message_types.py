# Generated by Django 5.2.7 on 2025-10-04 19:07

from django.db import migrations


def populate_message_types(apps, schema_editor):
    MessageType = apps.get_model('comms', 'MessageType')

    # Define the initial message types
    message_types = [
        {
            'code': 'CAN_ACCEPT_PATIENTS',
            'source_role': 'Anesthetist',
            'target_role': 'Nurse',
            'short_description_en': 'Patient requested',
            'full_description_en': 'This means the OR is ready to accept the patient. Please bring patient to the OR ASAP.',
            'short_description_pl': 'Pacjent wezwany',
            'full_description_pl': 'To oznacza, że sala operacyjna jest gotowa na przyjęcie pacjenta. Proszę jak najszybciej przyprowadzić pacjenta na salę operacyjną.',
            'button_color': 'danger',
            'display_order': 1,
            'is_active': True
        },
        {
            'code': 'SURGERY_DONE',
            'source_role': 'Anesthetist',
            'target_role': 'Nurse',
            'short_description_en': 'Patient awaiting pickup',
            'full_description_en': 'This means you can safely transfer the patient from OR/PACU.',
            'short_description_pl': 'Pacjent do odbioru',
            'full_description_pl': 'To oznacza, że można bezpiecznie przenieść pacjenta z sali operacyjnej/sali pooperacyjnej.',
            'button_color': 'danger',
            'display_order': 2,
            'is_active': True
        },
        {
            'code': 'PATIENT_IN_THE_OR',
            'source_role': 'Anesthetist',
            'target_role': 'Surgeon',
            'short_description_en': 'Patient in the OR',
            'full_description_en': 'This means you could start operating RIGHT NOW, where are you?',
            'short_description_pl': 'Pacjent na sali',
            'full_description_pl': 'To oznacza, że możesz rozpocząć operację NATYCHMIAST, gdzie jesteś?',
            'button_color': 'danger',
            'display_order': 3,
            'is_active': True
        }
    ]

    # Create the message types
    for mt_data in message_types:
        MessageType.objects.create(**mt_data)


def reverse_populate_message_types(apps, schema_editor):
    MessageType = apps.get_model('comms', 'MessageType')
    MessageType.objects.filter(
        code__in=['CAN_ACCEPT_PATIENTS', 'SURGERY_DONE', 'PATIENT_IN_THE_OR']
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("comms", "0002_add_messagetype_model"),
    ]

    operations = [
        migrations.RunPython(populate_message_types, reverse_populate_message_types),
    ]
